# marcosrdac's sxhkdrc config file
#
# I'll probably change a lot of my keybindings when I get
# a keyboary that contains the SUPER key :)


# --- focus/swap/move/resize nodes and windows --- #

# focus the node in/to the given direction
alt + {h,j,k,l}
	bspc node -f {west,south,north,east}
# focus the next/previous node in the current desktop
alt + {p,n}
	bspc node -f {next,prev}.local.!hidden.window
# focus the last node/desktop CHANGE THE GRAVE
alt + {dead_grave,Tab}
	bspc {node,desktop} -f last
#alt + {apostrophe,Tab}
# focus or send to the given desktop
alt + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'
# focus the node for the given path jump
alt + v : alt + {h,j,k,l,Tab}
	bspc node -f @{west,south,north,east,brother}
alt + v : alt + v
	pkill -ALRM sxhkd
# move node#/window
alt + shift + {h,j,k,l}
	bspwm_window_move {west,south,north,east} 20
  	#bspc node -s {west,south,north,east}
# m: send the newest marked node to the newest preselected node
# b: swap the current node and the biggest node
alt + shift + s
	bspc node newest.marked -n newest.!automatic
# resize window
#alt + ctrl + {h,j,k,l}
#	bspwm_resize {west,south,north,east} 20
# expand a window by moving one of its sides outward
alt + ctrl + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
# contract a window by moving one of its sides inward
alt + ctrl + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}


# --- misc --- #

# gaps management
#supper + r : {1-9,0}
	#bspc config window_gap $(( 5 * {0-9} ))
super + bracket{left,right}
	VAL=3; STEP={-$VAL,+$VAL}; GAP=$((`bspc config window_gap` + $STEP )); bspc config window_gap $GAP

# --- modes --- #

# alternate between the tiled and monocle layout
alt + g
	bspc desktop -l next
# set the window state
alt + {t,shift + t,space,f}
	bspwm_toggle_state {tiled,pseudo_tiled,floating,fullscreen}
# turn gaps on/off
alt + shift + f
	[ $(bspc config window_gap) -eq $\{WINDOW_GAP:=22\} ] && bspc config window_gap 0 || bspc config window_gap $WINDOW_GAP
	#[ `bspc config window_gap` -eq ${WINDOW_GAP:=22} ] && notify-send "ok" || notify-send `bspc config window_gap` $WINDOW_GAP
#[ $(bspc config window_gap) -eq ${WINDOW_GAP:=22} ] && bspc config window_gap 0 || bspc config window_gap $WINDOW_GAP
# set the node flags
alt + m ; + {m,l,s,p}
	bspc node -g {marked,locked,sticky,private}


# --- controling windows --- #

# close and kill
alt + shift + {_,ctrl + } q
	bspc node -{c,k}


# preselect node split ratio
alt + s ; {1-9}
	bspc node -o 0.{1-9}
# preselect node split direction
alt + s ; {h,j,k,l}
	bspc node -p {west,south,north,east}
# cancel preselection for the focused node/desktop
alt + s; {_,shift + } s
	{bspc node -p cancel  , \
	 bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel}


# --- opening software --- #

## terminal emulator and aplication menu
{_,alt + v : } alt + {Return,o}
	{ ,pkill -ALRM sxhkd;} \
		{$TERMINAL   , \
		 tlauncher }
		 #alacritty --class launcher -e menu-run }
		 #term-with-class dropdown_opener menu-run }

# opeining default software (w for window)
{_,alt + v : } alt + w ; {w,s,v,b,shift+b,n,shift+n,m,g,j,shift+j,k,shift+k}
	{ ,pkill -ALRM sxhkd;} \
	{wal_choose, \
	export HOME=$JUNKHOME && spotify, \
	$TERMINAL -e $EDITOR, \
	$BROWSER,			firefox, \
	$TERMINAL -e $FILEBROWSER,	thunar, \
	$TERMINAL -e ncmpcpp, \
	gimp, \
	$TERMINAL -e joplin, \
	joplin-desktop, \
	kpmenu_wal, \
	keepassx2 \
	}


# --- scratchpad --- #
# scratchpad show (z for folding)
alt + z ; {z,x,m,c}
	{bspwm_toggle_hidden dropdown_terminal, \
	 bspwm_toggle_hidden dropdown_mail & [ pgrep -x 'mbsync' ] || mbsync psn, \
	 bspwm_toggle_hidden dropdown_music_player, \
	 bspwm_toggle_hidden dropdown_calculator}


# --- scripts --- #

# notifying scripts
alt + c ; {e,shift+e,r,p,shift+p,alt+c,m, n}
	{networkmanager_dmenu, \
	$TERMINAL -e nmtui, \
	dm_bar_write_remainder, \
	show_prim_clip, \
	exchange_prim_clip; show_prim_clip, \
	pickcolor, \
	mpc_show}

# running any scripts
alt + x ; {shift+q,e,r,t,p,u, m}
	{dm_power_menu, \
	 emolog, \
	 dm_recording_menu, \
	 dm_to_inbox, \
	 dm_pomodoro, \
	 dm_useful_menu, \
	 $TERMINAL -e unimatrix}
alt + x ; w ; {w,f,j;l,l;j,j;h,h;j,k;l,l;k,k;h,h;k}
	toggle_webcam {_,full,se,se,sw,sw,ne,ne,nw,nw}
# other scripts
alt + {shift + g}
	{dm_bspwm_set_monocle_gaps}
# running any scripts
#{$XDG_CONFIG_HOME/sxhkd/sxhkdrc && kill -USR1 $(pidof sxhkd) , \
alt + e ; {s,e,r,t,u,p,l,c,v,b,n}
	$TERMINAL -e $EDITOR \
	{$XDG_CONFIG_HOME/nixpkgs/config/sxhkd/sxhkdrc && kill -USR1 $(pidof sxhkd) , \
	$XDG_CONFIG_HOME/shell/shenv , \
	$XDG_CONFIG_HOME/shell/shrc , \
	$XDG_DOCUMENTS_DIR/tmp/todo/index.md , \
	$XDG_DOCUMENTS_DIR/pro/ufba/index.md , \
	$XDG_CONFIG_HOME/polybar/config , \
	$XDG_CONFIG_HOME/lf/lfrc , \
	$XDG_CONFIG_HOME/cron/user.cron , \
	$XDG_CONFIG_HOME/nvim/init.vim , \
	$XDG_CONFIG_HOME/bspwm/bspwmrc , \
	-c 'VimwikiIndex' -c ':lcd %:p:h'
	}

# call an useful menu
alt + Caps_Lock
    pkill -USR2 sxhkd; sleep .1; xdotool key Caps_Lock; setxkbmap -layout br -option caps:swapescape; sleep .1; pkill -USR2 sxhkd
# call an useful menu
alt + Escape
    dm_useful_menu


# --- almost fixed stuff --- #

# alt + arrows for brightness and volume
alt + shift + {Left,Right,Down,Up}
	{brightnessctl s 5%-; kill -USR1 $(cat /tmp/polybar_brightness$\{XDG_VTNR\}.pid) , \
	 brightnessctl s +5%; kill -USR1 $(cat /tmp/polybar_brightness$\{XDG_VTNR\}.pid) , \
	 pamixer --allow-boost -d 5 , \
	 pamixer --allow-boost -i 5}

# function keys
alt + {F5, shift + F5, F9,shift + F9}
	{bspwm_display_menu, bspwm_display_menu auto, dm_mount_menu, dm_umount_menu}


# --- fixed stuff --- #

# controlling audio and music
XF86MonBrightness{Down,Up}
	{brightnessctl s 5%-; kill -USR1 $(cat /tmp/polybar_brightness$\{XDG_VTNR\}.pid) , \
	 brightnessctl s +5%; kill -USR1 $(cat /tmp/polybar_brightness$\{XDG_VTNR\}.pid)}

# controlling audio and music
{XF86Audio{Play,Stop,Prev,Next,Mute,LowerVolume,RaiseVolume}
	{mpc toggle                  , \
	 mpc stop                    , \
	 mpc prev                    , \
	 mpc next                    , \
	 pamixer --allow-boost -t    , \
	 pamixer --allow-boost -d 5  , \
	 pamixer --allow-boost -i 5}

# screenshots
{_,shift + ,alt +} @Print
	xorg-screenshot {_, --slice, --slice}

# power button
XF86PowerOff
	dm_power_menu


# temporary
alt + F2
	xrdb ~/.config/Xresources/mAin
