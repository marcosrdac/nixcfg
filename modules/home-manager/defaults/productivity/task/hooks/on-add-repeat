#!/usr/bin/env sh

read task

# check api version
api=`echo "$1" | cut -d : -f 2`
[ -n "$api" ] && [ "$api" -lt 2 ] && echo "$task" && exit 0

# find repeat flag, else exit
description=`echo "$task" | jq -r '.description'`
repeat=`echo "$description" | sed -n 's/\(^\|\(\(.*\)\s\)\)\b\(rep\(\|e\(\|a\(\|t\)\)\):\(\S*\)\)\s*\(.*\)/\8/p'`

# remove repeat:xxx from description
new_description=`echo "$description" | 
  sed -n "s/\(^\|\(\(.*\)\s\)\)\b\(rep\(\|e\(\|a\(\|t\)\)\):\S*\)\s*\(.*\)/\3 \8/p" |
  awk '{ $1=$1; print }'`
[ -n "$new_description" ] && description=$new_description

# no repetition value
if [ -z "$repeat" ]
then
  echo "$task" | jq -c --arg description "$description" \
    '.description = $description'
  exit 0
fi

tags=`echo "$task" | jq -c .tags`
[ "$tags" = null ] &&
  idx=null ||
  idx=`echo "$tags" | jq -c 'map(startswith("repeat@")) | index(true)'`
[ -z $idx ] && idx=null

# set repeat tag
tag="repeat@$repeat"
if [ "$tags" = null ]
then
  tags=`jq -c -n --arg tag "$tag" '.[0] = $tag'`
else
  ntags=`echo "$tags" | jq length`
  [ $idx = null ] && idx=$ntags
  tags=`echo "$tags" |
    jq -c --argjson idx $idx --arg tag "$tag" '.[$idx] = $tag'`
fi

# update tags and description
echo "$task" | jq -c \
  --argjson tags "$tags" \
  --arg description "$description" \
  '.description = $description | .tags = $tags'

exit 0


# DEBUG
#task='{"description":"asd asd efe fef rep:3d","due":"20221002T000000Z","entry":"20220530T210547Z","modified":"20220530T210547Z","scheduled":"20220602T210547Z","status":"pending","until":"20230530T210547Z","uuid":"94799753-ddcb-4ce5-9f48-876389ef6f00","wait":"20220531T030000Z","tags":["a","b","repeat@0d"]}'
