#!/usr/bin/env sh

read task

DRY_RUN=false

[ $DRY_RUN = true ] && task='{"description":"asd asd efe","due":"20221002T030000Z","entry":"20220530T210547Z","modified":"20220530T210547Z","scheduled":"20220602T210547Z","status":"pending","until":"20230530T210547Z","uuid":"94799753-ddcb-4ce5-9f48-876389ef6f00","wait":"20220531T030000Z","tags":["a","b","repeatFromRepeat@xxxx-05-04"]}'

api=`echo "$1" | cut -d : -f 2`
[ -n "$api" ] && [ "$api" -lt 2 ] && exit 0

command=`echo "$3" | cut -d : -f 2`
if [ $DRY_RUN = false ]
then
  [ "$command" != "done" ] && exit 0
else
  [ "$command" == "calc" ] && exit 0
fi

tags=`echo "$task" | jq -c .tags`
[ "$tags" == null ] && exit 0

idx=`echo "$tags" | jq -c 'map(startswith("repeatFrom")) | index(true)'`
[ -n "$idx" ] && [ $idx != null ] || exit 0

tag=`echo "$tags" | jq -r --argjson idx $idx '.[$idx]'`
repeat_from=`echo "$tag" | cut -d @ -f 1`
repeat=`echo "$tag" | cut -d @ -f 2`

old_due=`echo "$task" | jq -r '.due'`
old_scheduled=`echo "$task" | jq -r '.scheduled'`

# if old task has no due date, use scheduled date as reference
[ "$old_due" != null ] && old_next="$old_due" || old_next="$old_scheduled"

if [ "$repeat_from" = "repeatFromRepeat" ]
then

  repeat_date=`echo "$repeat"  | sed -n "s/\(\w*\)-\(\w\w\)-\(\w\w\)\(\(\|T\)\(.*\)\)$/\1:\2:\3:\6/p"`
  repeat_day=`echo "$repeat_date" | cut -d : -f 3`

  if [ -n "$repeat_day" ]
  then
    repeat_month=`echo "$repeat_date" | cut -d : -f 2`
    repeat_time=`echo "$repeat_date" | cut -d : -f 4-5`

    old_year=`task calc "$old_next" | cut -d - -f 1`
    old_month=`task calc "$old_next" | cut -d - -f 2`

    next_year=$((old_year+1))

    # presuming we are not going to deal with xxxx-03-xx
    # ...if yearly, month must have numbers
    if `echo "$repeat_month" | grep -q '[0-9]'`
    then
      next="${next_year}-${repeat_month}-${repeat_day}"
      [ -n "$repeat_time" ] && next=${next}T${repeat_time}
      next=`task calc "$next"`
    elif `echo "$repeat_day" | grep -q '[0-9]'`
    then
      next_month=$((old_month+1))
      next="${old_year}-${next_month}-${repeat_day}"

      # in case it is Feb 29th and we are in leap year
      `task calc "$old_next + $repeat" 2>/dev/null` ||
        next="${old_year}-${next_month}-${repeat_yesterday}"
      next="${next_year}-${repeat_month}-$((repeat_day-1))"
      [ -n "$repeat_time" ] && next=${next}T${repeat_time}
      next=`task calc "$next"`
    else
      next=`task calc "$old_next + $repeat"`
    fi
    # TODO if old_next and new_next are the same, do not repeat the task
  fi
  
else
  # calculate next date (due or scheduled)
  end=`echo "$task" | jq -r '.end'`
  next=`task calc "$end + $repeat" 2>/dev/null` ||
    next=`task calc "$repeat"`
fi

# shift scheduled, wait and until accordingly
if [ "$old_due" = null ] && [ "$old_scheduled" = null ]
then
  task=`echo "$task" | jq -c --arg due "$next" \
    '.due = $due | del(.scheduled, .wait, .until)'`
else
  old_wait=`echo "$task" | jq -r '.wait'`
  old_until=`echo "$task" | jq -r '.until'`

  if [ $old_due != null ]
  then
    due=`task calc "$next - ($old_next - $old_due)"`
    task=`echo "$task" |
      jq -c --arg due "$next" '.due = $due'`
  fi

  if [ $old_scheduled != null ]
  then
    scheduled_before=`task calc "$old_scheduled <= $old_next"`
    if [ $scheduled_before = true ]
    then
      scheduled=`task calc "$next - ($old_next - $old_scheduled)"` &&
      task=`echo "$task" |
        jq -c --arg scheduled "$scheduled" '.scheduled = $scheduled'`
    else
      task=`echo "$task" |
        jq -c 'del(.scheduled)'`
    fi
  fi

  if [ $old_wait != null ]
  then
    wait_before_due=`task calc "$old_wait <= $old_next"`
    if [ $wait_before_due = true ]
    then
      _wait=`task calc "$next - ($old_next - $old_wait)"` &&
      task=`echo "$task" | jq -c --arg wait "$_wait" '.wait = $wait'`
    else
      task=`echo "$task" | jq -c 'del(.wait)'`
    fi
  fi

  if [ $old_until != null ]
  then
    due_before_until=`task calc "$old_next <= $old_until"`
    if [ $due_before_until = true ]
    then
      until=`task calc "$next - ($old_until - $old_next)"` &&
      task=`echo "$task" | jq -c --arg until "$until" '.until = $until'`
    else
      task=`echo "$task" | jq -c 'del(.until)'`
    fi
  fi

fi


# create new task
if [ $DRY_RUN = false ]
then
  echo "$task" | jq -c 'del(.uuid, .end) | .status = "pending"' |
    (task import - 1>/dev/null)
else
  echo "$task" | jq -c 'del(.uuid, .end) | .status = "pending"'
fi

echo "Repeating task to: ${due}."

exit 0


# DEBUG (difficult in this one because of )
#task='{"description":"asd asd efe fef rep:3d","due":"20221002T000000Z","entry":"20220530T210547Z","modified":"20220530T210547Z","scheduled":"20220602T210547Z","status":"pending","until":"20230530T210547Z","uuid":"94799753-ddcb-4ce5-9f48-876389ef6f00","wait":"20220531T030000Z","tags":["a","b","repeat@0d"]}'
